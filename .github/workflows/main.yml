env:
  NODE_VERSION: '20.x'
  TZ: 'Asia/Seoul'

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - '**'
  pull_request_review:
    types: [submitted]

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node.js with pnpm cache
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  test:
    needs: install_dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Tests
        run: pnpm run test:cov

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm run build

  build_and_deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.ref, 'release/')
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: Restore dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm run build
      - name: Zip
        run: pnpm run zip
      - name: Upload zip as artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: artifact.zip
      - name: Deploy
        run: echo "Deploying to production server"
